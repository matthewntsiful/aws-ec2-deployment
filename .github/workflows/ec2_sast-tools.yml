name: Deploy node.js Application to EC2

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'node_modules/**'
      - 'readme.md'
      - '.gitignore' 
     # - '.github/workflows/**'
  workflow_dispatch: # Allows manual execution

jobs:
  security_scan: # remove this ðŸ‘ˆ
    name: Security Scan & Deployment
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Run Security Scan (npm audit)
        run: |
          # Run security scan and save the report in json format
          npm audit --audit-level=high --json > audit-report.json || true
          cat audit-report.json
      - name: Upload audit-report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: ./app/audit-report.json

  download-artifact:
    name: Download audit-report
    runs-on: ubuntu-latest
    needs: security_scan  # This job depends on the security_scan job

    steps:
      - name: Download audit-report
        uses: actions/download-artifact@v4
        with:
          name: audit-report

  deploy:
    name: Deploy to Production (on EC2)
    environment: Production
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    needs: security_scan  # This job also depends on the security_scan job

    steps:
      - name: Checkout the files
        uses: actions/checkout@v4

      - name: Deploy to EC2 Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get -y update
            sudo apt-get install -y nginx
            sudo systemctl daemon-reload
            sudo systemctl start nginx
            sudo systemctl enable nginx
            
            cd ${{ secrets.TARGET_DIR }}
            # Remove existing contents of /var/www/html
            sudo rm -rf /var/www/html/*
            # Move new files to /var/www/html
            sudo mv app/public/* /var/www/html



            ##